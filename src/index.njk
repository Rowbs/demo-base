---
title: home
---
<style>
 
  .protected-content {
    display: grid;
    gap: 1rem;
    grid-template-columns: repeat(1, 1fr);
  }

  .content h2 {
    font-size: 1.25rem;
    text-align: center;
  }

  .content-display {
    margin: 0;
  }

  .credit {
    display: block;
    font-size: 0.75rem;
  }

  .content img {
    width: 100%;
  }

      .dream-team {
    display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  grid-gap: 0px;
  }
  .dream-team .content img{
    object-fit: cover;
    width: 300px;
    height: 300px;
  }

.content-container{
  margin: 4rem auto;
  max-width: 640px;
  min-height: calc(100vh - 242px);
  width: 90vw;
}
</style>
<h1>Berry Bro's Crypto Dream Team</h1>
<div class="dream-team">
  <div class="content grid-col-span">
    <img src="/images/andrew.png">
    <h2>iberryboi</h2>
    <ul>
      <li>Blockchain Developer</li>
      <li>DeFi Advocate</li>
      <li>Worked at Lowes Home Improvment</li>
      </ul>
  </div>
  <div class="content grid-col-span">
    <img src="/images/michael.png">
    <h2>Defi Degen</h2>
    <ul>
      <li>Mathmetician</li>
      <li>Whale Investor</li>
      <li>EX McDonalds Manager</li>
      </ul>
  </div>
  <div class="content grid-col-span">
    <img src="/images/al.png">
    <h2>Maddog Al</h2>
     <ul>
      <li>Technical Advisor</li>
      <li>Python Developer</li>
      <li>Public Speaker @Utah Technical University</li>
      </ul>
  </div>
  <div class="content grid-col-span">
    <img src="/images/matt.png">
    <h2>Cyan supernatural</h2>
     <ul>
      <li>Digital Marketer</li>
      <li>Designer</li>
      <li>EX Geico Insurance Salesmen</li>
      </ul>
  </div>
</div>
<div class="content-container">
<h2 class="greeting"></h2>
<div class="protected-content">
  <div class="content">
    <h2>Free Content</h2>
    <div class="free"></div>
  </div>
  <div class="content">
    <h2>Pro Content</h2>
    <div class="pro"></div>
  </div>
</div>
</div>


<template id="content">
     <figure class="content-display">
       <img />
       <figcaption>
         <a class="credit"></a>
       </figcaption>
     </figure>
   </template>


<script>
    const loadSubscriptionContent = async (user) => {
     const token = user ? await netlifyIdentity.currentUser().jwt(true) : false;

     
     ['free', 'pro'].forEach((type) => {
       fetch('/api/get-protected-content', {
         method: 'POST',
         headers: {
           Authorization: `Bearer ${token}`,
         },
         body: JSON.stringify({ type }),
       })
         .then((res) => res.json())
         .then((data) => {
         
           const template = document.querySelector('#content');
           const container = document.querySelector(`.${type}`);

           // remove any existing content from the content containers
           const oldContent = container.querySelector('.content-display');
           if (oldContent) {
             container.removeChild(oldContent);
           }

           const content = template.content.cloneNode(true);

           const img = content.querySelector('img');
           img.src = data.src;
           img.alt = data.alt;

           const credit = content.querySelector('.credit');
           credit.href = data.creditLink;
           credit.innerText = `Credit: ${data.credit}`;

           const caption = content.querySelector('figcaption');
           caption.innerText = data.message;
           caption.appendChild(credit);

           container.appendChild(content);
        });
     });
   };

function userRoler(user){
  console.log(user);
  console.log(user.app_metadata.roles[0]);
document.querySelector('.greeting').innerText = "Welcome " + user.user_metadata.full_name;   
}

function removeRoler(){
  document.querySelector('.greeting').innerText = '';
}

   const handleUserStateChange = (user) => {
     loadSubscriptionContent(user);
   };

   netlifyIdentity.on('init', handleUserStateChange);
   netlifyIdentity.on('login', function(user){userRoler(user)});
   netlifyIdentity.on('login', handleUserStateChange);
   netlifyIdentity.on('logout', function(){removeRoler()});
   netlifyIdentity.on('logout', handleUserStateChange);
   </script>